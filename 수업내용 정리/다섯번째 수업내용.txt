Object Oriented Programing 
ㄴ> idea -> object(Object Oriented) -> code(Programing)
            ㄴ> (속성, 동작)
    Object -> class, 속성 -> variable, 동작 -> method

# Use Case -> (사용사례, 제품 사용 시나리오(경혐))
 ex) kiosk의 Use Case
    - 메뉴(이름, 가격)가 보임
    - 원하는 메뉴를 누른다.
    - 결제할 가격이 보인다.
    - 현금으로 결제.
    - 결제 성공 메시지를 보여주고, 잔돈 반환.

Use Case는 핵심적인 기능, 성공 시나리오를 바탕으로 처음 작성.
Use Case = idea
** Use Case를 자세히 써야 함. 이를 바탕으로 객체(Object)를 작성함!!

primitive type으로 구현 ㄱㄴ -> 속성, ㅂㄱㄴ -> 객체
ex) kiosk의 메뉴는 primitive type으로 표현 ㅂㄱㄴ, 메뉴는 '이름'과 '가격'이라는 타입으로 표현 ㄱㄴ
    현금은 primitive type으로 표현도 ㄱㄴ, 하지만 '천원','오천원,'만원'등의 타입으로 표현이 가능해서 객체와 속성 둘다 표현 가능.
    '~ 한다' 같이 수행하는 건 왠만해서 동작.
이외에 중간 시나리오, 실패 시나리오도 작성.

idea -> object -> code 총정리
    1. Use Case 작성.
    2. 객체, 속성, 동작 구분
    3. 구현 (Implementation)
    4. Debug / Feedback
---
jdk 8 SE 설치 및 환경변수 설정