잘하는것 못하는것 좋아하는것 싫어하는것을 명확히 할 것.
아래 치고 올라오는 애들이 절대 넘지 못하는 벽 -> 경험치
이 경험치를 쌓아야 함.
치고 올라오는 애들이 못만드는 서비스를 만들만한 경험치를 쌓아야함.
---
encoding -> 인코딩. 내가 작성한걸 남이 못보게 막는것. 코드를 알아보지 못하게 '암호화' 하는것.
decoding -> 디코딩. 암호화 된 문자나 평문을 '복호화'하는것.
    ex) '야스'를 UTF-8 인코딩 한걸 다른 인코드 모음으로 디코딩 할 때 이상한 문자로 나옴.
compiler -> com/pile(쌓다) -> 소스코드(프로그래밍 언어 파일)를 컴퓨터가 알아먹게 실행파일로 쌓는것.
    * 이 과정 속에서 소스의 오류를 찾아준다.
---
# RAM의 구조.
RAM -> 실행중인 코드를 기억하는 놈.
정해진 자원이상으로 프로세스를 처리하다간 프로그램 다 뒤짐.
## RAM 속에서 굴러가는 우리 프로그램의 모습
-------------------RAM-------------------------------
|  ----------------JAVA--------------------------   |
|  |  ----------Kiosk_TUI----------             |   |
|  |  |   ---------------------   |             |   |
|  |  |  |                     |  |             |   |
|  |  |  |     |---name---|    |  |             |   |
|  |  |  |     |   NULL   |    |  |             |   |
|  |  |  |     |----------|    |  |             |   |
|  |  |  |        main ----------->  main(args) |   |
|  |  |  |                     |  |             |   |
|  |  |  |                     |  |             |   |
|  |  |  -----------------------  |             |   |
|  |  -----------------------------             |   |
|  ---------------------------------------------    |
-----------------------------------------------------

일단 만들 class의 가시성(public, private)을 정해야 함. (member라는 객체에 passwd는 private 같은 너낌.)
static을 쓰면 class 밖으로 끄집어 내줌.
기본적으로 java에서 지원해주는 class 들은 static을 안써도 됌. (string이나 system 등 같은거.)
기본적으로 지원해주는 class들이 ㅈㄴ 많음.